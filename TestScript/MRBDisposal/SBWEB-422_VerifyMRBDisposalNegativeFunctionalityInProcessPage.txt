
		// ########################################################################################################
		// # Test Case ID: SBWEB-422
		// # Test Case Name: VerifyMRBDisposalNegativeFunctionalityInProcessPage
		// #-------------------------------------------------------------------------------------------------------
		// # Description: This script verifies 'MRB Disposal' negative functionality in 'Process'
		// # page and then successfully log out.
		// #-------------------------------------------------------------------------------------------------------
		// # Pre-conditions: User credentials are communicated to the user.
		// # 				 MiMedx SBWeb URL is accessible to the user.
		// # Post-conditions: NA
		// # Limitations: NA
		// #-------------------------------------------------------------------------------------------------------
		// # Owner: 
		// # Created on: 04-02-2014
		// #-------------------------------------------------------------------------------------------------------
		// # Reviewer: 
		// # Review Date:
		// #-------------------------------------------------------------------------------------------------------
		// # History Notes:
		// ########################################################################################################

		//Getting data from config file  
		String strURL=Script.dicConfigValues.get("strApplicationURL");
		
		//Getting data from master test data file
		String strUserName = Script.dicTestData.get("strUserName");
		String strPassword = Script.dicTestData.get("StrPassword");
		String strSearchText = Script.dicTestData.get("strSearchText");
		String strExpectedText = Script.dicTestData.get("strExpectedText");	
		String strSearchText2 = Script.dicTestData.get("strSearchText2");
		String strExpectedText2 = Script.dicTestData.get("strExpectedText2");	
		String strConfMsg = Script.dicTestData.get("strConfMsg");	
		
		// ########################################################################################################
		// Step 1 - Launch browser.
		// Open application URL.
		// ########################################################################################################
		strStepDesc = "Launch browser and open SBWEB application URL.";
		strExpResult = "Browser and SBWEB application URL should be opened.";
		blnFlag = LaunchApplicationUrl(strURL);
		if (blnFlag) 
		{
			reporter.ReportStep(strStepDesc, strExpResult, "SBWEB application url: '"+strURL+"' launched successfully.", "Pass");
		}
		else 
		{
			reporter.ReportStep(strStepDesc, strExpResult, Err.Description, "Fail");
			return;
		}

		// ########################################################################################################
		// Step 2 - Enter all the mandatory fields with
		// valid data and click on login button.
		// ########################################################################################################
		strStepDesc = "Enter all the mandatory fields with valid data and click on login button.";
		strExpResult = "User should be logged in into the application.";
		blnFlag = loginMiMedx(strUserName, strPassword);
		if (blnFlag == true) 
		{
			reporter.ReportStep(strStepDesc, strExpResult, "User: '" + strUserName+ "' signed in successfully.", "Pass");
		} 
		else 
		{
			reporter.ReportStep(strStepDesc, strExpResult, Err.Description, "Fail");
			return;
		}

		// ########################################################################################################
		// Step 3 - Click on 'Process' link.
		// ########################################################################################################
		strStepDesc = "Click on 'Process' link given on left navigation area.";
		strExpResult = "'Process' link should be clicked.";
		blnFlag=clickAndVerifyVisible("pgeAssembly_Lines", "lnkProcess", "pgeAssembly_Lines", "lnkDonor_Processing");
		if (blnFlag == true) 
		{
			reporter.ReportStep(strStepDesc, strExpResult, "'Process' link clicked successfully.", "Pass");
		} 
		else 
		{
			reporter.ReportStep(strStepDesc, strExpResult, Err.Description, "Fail");
		}

		// ########################################################################################################
		// Step 4 - Click on 'MRB Disposal' link and verify 'MRB Disposal' landing page is displayed.
		// ########################################################################################################
		strStepDesc = "Click on 'MRB Disposal' link and verify 'MRB Disposal' landing page is displayed.";
		strExpResult = "'MRB Disposal' landing page should be displayed.";
		blnFlag=clickAndVerify("pgeAssembly_Lines", "lnkMRBDisposal", "MRB Disposal");		
		if (blnFlag == true) 
		{
			reporter.ReportStep(strStepDesc, strExpResult, "'MRB Disposal' landing page is verified successfully.", "Pass");
		}
		else 
		{
			reporter.ReportStep(strStepDesc, strExpResult, Err.Description, "Fail");
		}
		
		// ########################################################################################################
		// Step 5 - Enter some invalid/junk characters in the 'Scanned Barcode's box and verify error message.
		// ########################################################################################################
		strStepDesc = "Enter some invalid/junk characters in the 'Scanned Barcode's box and verify '" + strExpectedText + "' message.";
		strExpResult = "Invalid/junk characters should be entered in the 'Scanned Barcode's box and '" + strExpectedText + "' message should be successfully displayed.";
		blnFlag = verifyErrorMessage("pgeMRBDisposal","txtScanList",strSearchText,"btnProcessScans","pgeCommon","objUIMessageErrorSummary",strExpectedText);
		
		if (blnFlag == true) 
		{
			reporter.ReportStep(strStepDesc, strExpResult, "Invalid/junk characters are entered in the 'Scanned Barcode's' box and '" + strExpectedText + "' message is successfully displayed.", "Pass");
		}
		else 
		{
			reporter.ReportStep(strStepDesc, strExpResult, Err.Description, "Fail");
		}
		
		// ########################################################################################################
		// Step 6 - Enter a Tissue id in Scanned Barcodes box which is not valid for MRB and verify error message.
		// ########################################################################################################
		strStepDesc = "Enter a Tissue id in Scanned Barcodes box which is not valid for MRB and verify '" + strExpectedText2 + "' message.";
		strExpResult = "A Tissue id not valid for MRB should be entered in Scanned Barcodes box and '" + strExpectedText2 + "' message should be successfully displayed.";
		blnFlag = verifyErrorMessage("pgeMRBDisposal","txtScanList",strSearchText2,"btnProcessScans","pgeCommon","objUIMessageErrorSummary",strExpectedText2);
		
		if (blnFlag == true) 
		{
			reporter.ReportStep(strStepDesc, strExpResult, "Invalid/junk characters are entered in the 'Scanned Barcode's' box and '" + strExpectedText2 + "' message is successfully displayed.", "Pass");
		}
		else 
		{
			reporter.ReportStep(strStepDesc, strExpResult, Err.Description, "Fail");
		}
		
	   // ####################################################################################################################
	   // Step 7 - Enter some invalid/junk characters in the 'Scanned Barcodes' box.
	   // ######################################################################################################################
		strStepDesc = "Enter some invalid/junk characters in the 'Scanned Barcodes' box.. .";
		strExpResult = "Invalid/junk characters '"+strSearchText+"' should be entered in Scanned Barcodes box";
		blnFlag = Page("pgeMRBDisposal").Element("txtScanList").Type(strSearchText);
		
		if (blnFlag == true) 
		{
			reporter.ReportStep(strStepDesc, strExpResult, "Invalid/junk characters '"+strSearchText+"' are successfully entered in 'Scanned Barcode's' box.", "Pass");
		}
		else 
		{
			reporter.ReportStep(strStepDesc, strExpResult, Err.Description, "Fail");
		}
		
		// ########################################################################################################
		// Step 8 - Click on 'Ship' button on 'MRB Disposal' page.
		// ########################################################################################################
		strStepDesc = "Click on 'Ship' button on 'MRB Disposal' page.";
		strExpResult = "'Ship' button should be clicked and confirmation message should be displayed on 'MRB Disposal' page.";
		blnFlag=clickAndVerify("pgeMRBDisposal","btnShip", "pgeMRBDisposal","objConfMsg" );
		if (blnFlag == true) 
		{
			reporter.ReportStep(strStepDesc, strExpResult, "'Ship' button is clicked and confirmation message is displayed on 'MRB Disposal' page.", "Pass");
		}
		else 
		{
			reporter.ReportStep(strStepDesc, strExpResult, Err.Description, "Fail");
		}
		
		// ########################################################################################################
		// Step 9 - Validate confirmation message ''All scanned tissue items shipped' on 'MRB Disposal' page.
		// ########################################################################################################
		strStepDesc = "Validate confirmation message 'All scanned tissue items shipped' on 'MRB Disposal' page.";
		strExpResult = "Confirmation message '"+strConfMsg+"' should be displayed.";
		blnFlag=verifyExactText("pgeMRBDisposal", "objConfMsg", strConfMsg);
		if (blnFlag == true)
		{
			reporter.ReportStep(strStepDesc, strExpResult, "Confirmation message '"+strConfMsg+"' is displayed.", "Pass");
		}
		else
		{
			reporter.ReportStep(strStepDesc, strExpResult, Err.Description, "Fail");
		}
		
		// ########################################################################################################
		// Step 10 - Logout from SBWEB test application.
		// ########################################################################################################
		strStepDesc = "Logout from SBWEB test application.";
		strExpResult = "User should be logged out successfully.";
		blnFlag = logoutMiMedx(strUserName);
		if (blnFlag == true)
		{
			reporter.ReportStep(strStepDesc, strExpResult, "User: '" + strUserName+ "' signed out successfully.", "Pass");
		} 
		else 
		{
			reporter.ReportStep(strStepDesc, strExpResult, Err.Description, "Fail");
		}