
		// ########################################################################################################
		// # Test Case ID: SBWEB-17
		// # Test Case Name: VerifyAssemblyLinesNegativeFunctionality
		// #-------------------------------------------------------------------------------------------------------
		// # Description: This script verifies 'Search AssemplyLine' negative functionality under 'Packaging'
		// # and then successfully log out.
		// #-------------------------------------------------------------------------------------------------------
		// # Pre-conditions: User credentials are communicated to the user.
		// # 				 MiMedx SBWeb URL is accessible to the user.
		// # Post-conditions: NA
		// # Limitations: NA
		// #-------------------------------------------------------------------------------------------------------
		// # Owner: Ashish Khare
		// # Created on: 05-06-2015
		// #-------------------------------------------------------------------------------------------------------
		// # Reviewer: 
		// # Review Date:
		// #-------------------------------------------------------------------------------------------------------
		// # History Notes:
		// ########################################################################################################

		//Getting data from config file  
		String strURL=Script.dicConfigValues.get("strApplicationURL");
		
		//Getting data from master test data file
		String strUserName = Script.dicTestData.get("strUserName");
		String strPassword = Script.dicTestData.get("StrPassword");
		String strSearchText = Script.dicTestData.get("strSearchText");
		String strExpectedText = Script.dicTestData.get("strExpectedText");	
		
		// ########################################################################################################
		// Step 1 - Launch browser.
		// Open application URL.
		// ########################################################################################################
		strStepDesc = "Launch browser and open SBWEB application URL.";
		strExpResult = "Browser and SBWEB application URL should be opened.";
		blnFlag = LaunchApplicationUrl(strURL);
		if (blnFlag) 
		{
			reporter.ReportStep(strStepDesc, strExpResult, "SBWEB application url: '"+strURL+"' launched successfully.", "Pass");
		}
		else 
		{
			reporter.ReportStep(strStepDesc, strExpResult, Err.Description, "Fail");
			return;
		}

		// ########################################################################################################
		// Step 2 - Enter all the mandatory fields with
		// valid data and click on login button.
		// ########################################################################################################
		strStepDesc = "Enter all the mandatory fields with valid data and click on login button.";
		strExpResult = "User should be logged in into the application.";
		blnFlag = loginMiMedx(strUserName, strPassword);
		if (blnFlag == true) 
		{
			reporter.ReportStep(strStepDesc, strExpResult, "User: '" + strUserName+ "' signed in successfully.", "Pass");
		} 
		else 
		{
			reporter.ReportStep(strStepDesc, strExpResult, Err.Description, "Fail");
			return;
		}

		// ########################################################################################################
		// Step 3 - Click on 'Packaging' link.
		// ########################################################################################################
		strStepDesc = "Click on 'Packaging' link given on left navigation area.";
		strExpResult = "'Packaging' link should be clicked.";
		blnFlag=clickAndVerifyVisible("pgeAssembly_Lines", "lnkPackaging", "pgeAssembly_Lines", "lnkAssemblyLines");
		if (blnFlag == true) 
		{
			reporter.ReportStep(strStepDesc, strExpResult, "'Packaging' link clicked successfully.", "Pass");
		} 
		else 
		{
			reporter.ReportStep(strStepDesc, strExpResult, Err.Description, "Fail");
		}

		// ########################################################################################################
		// Step 4 - Click on 'Assembly Lines' link and verify navigated page.
		// ########################################################################################################
		strStepDesc = "Click on 'Assembly Lines' link and verify navigated page.";
		strExpResult = "'Assembly Lines' page should be displayed.";
		blnFlag=clickAndVerify("pgeAssembly_Lines","lnkAssemblyLines", "pgeAssemblyLines","btnNewAssemblyLine");
		if (blnFlag == true) 
		{
			reporter.ReportStep(strStepDesc, strExpResult, "'Assembly lines' page is verified successfully.", "Pass");
		}
		else 
		{
			reporter.ReportStep(strStepDesc, strExpResult, Err.Description, "Fail");
		}
		
		// ########################################################################################################
		// Step 5 - Enter invalid/junk characters in the 'Line Name' search box and verify displayed message.
		// ########################################################################################################
		strStepDesc = "Enter invalid/junk characters in the 'Line Name' search box.";
		strExpResult = "Invalid/junk characters should be entered in the 'Line Name' search box and '" + strExpectedText + "' message should be displayed.";
		blnFlag = verifySearchResults("pgeAssemblyLines", "Line Name", strSearchText, "pgeCommon", "objNoRecordsFound", strExpectedText);
		
		if (blnFlag == true) 
		{
			reporter.ReportStep(strStepDesc, strExpResult, "Invalid/junk characters are entered in the 'Line Name' search box and '" + strExpectedText + "' message is displayed successfully.", "Pass");
		}
		else 
		{
			reporter.ReportStep(strStepDesc, strExpResult, Err.Description, "Fail");
		}
		
		// ########################################################################################################
		// Step 6 - Clear the 'Line Name' search box and verify page refresh. 
		// ########################################################################################################
		strStepDesc = "Clear the 'Line Name' search box and verify page refresh.";
		strExpResult = "'Line Name' search box should be cleared and the page should refresh.";
		blnFlag = clearSearchField("pgeAssemblyLines", "Line Name");
		
		if (blnFlag == true) 
		{
			reporter.ReportStep(strStepDesc, strExpResult, "'Line Name' search box is cleared and the page is refreshed.", "Pass");
		}
		else 
		{
			reporter.ReportStep(strStepDesc, strExpResult, Err.Description, "Fail");
		}
		
		// ########################################################################################################
		// Step 7 - Enter invalid/junk characters in the 'Small Bar Code Device' search box and verify displayed message. 
		// ########################################################################################################
		strStepDesc = "Enter invalid/junk characters in the 'Small Bar Code Device' search box.";
		strExpResult = "Invalid/junk characters should be entered in the 'Small Bar Code Device' search box and '" + strExpectedText + "' message should be displayed.";
		blnFlag = verifySearchResults("pgeAssemblyLines", "Small Bar Code Device", strSearchText, "pgeCommon", "objNoRecordsFound", strExpectedText);
		
		if (blnFlag == true) 
		{
			reporter.ReportStep(strStepDesc, strExpResult, "Invalid/junk characters are entered in the 'Small Bar Code Device' search box and '" + strExpectedText + "' message is displayed successfully.", "Pass");
		}
		else 
		{
			reporter.ReportStep(strStepDesc, strExpResult, Err.Description, "Fail");
		}
		
		// ########################################################################################################
		// Step 8 - Clear the 'Small Bar Code Device' search box and verify page refresh. 
		// ########################################################################################################
		strStepDesc = "Clear the 'Small Bar Code Device' search box and verify page refresh.";
		strExpResult = "'Small Bar Code Device' search box should be cleared and the page should refresh.";
		blnFlag = clearSearchField("pgeAssemblyLines", "Small Bar Code Device");
		
		if (blnFlag == true) 
		{
			reporter.ReportStep(strStepDesc, strExpResult, "'Small Bar Code Device' search box is cleared and the page is refreshed.", "Pass");
		}
		else 
		{
			reporter.ReportStep(strStepDesc, strExpResult, Err.Description, "Fail");
		}
		
		// ########################################################################################################
		// Step 9 - Enter invalid/junk characters in the 'IP Address' search box and verify displayed message. 
		// ########################################################################################################
		strStepDesc = "Enter invalid/junk characters in the 'IP Address' search box.";
		strExpResult = "Invalid/junk characters should be entered in the 'IP Address' search box and '" + strExpectedText + "' message should be displayed.";
		blnFlag = verifySearchResults("pgeAssemblyLines", "txtIPAddress_SmallBarCode", strSearchText,"objNoRecordsFound", strExpectedText);
		
		if (blnFlag == true) 
		{
			reporter.ReportStep(strStepDesc, strExpResult, "Invalid/junk characters are entered in the 'IP Address' search box and '" + strExpectedText + "' message is displayed successfully.", "Pass");
		}
		else 
		{
			reporter.ReportStep(strStepDesc, strExpResult, Err.Description, "Fail");
		}
		
		// ########################################################################################################
		// Step 10 - Clear the 'IP Address' search box and verify page refresh. 
		// ########################################################################################################
		strStepDesc = "Clear the 'IP Address' search box and verify page refresh.";
		strExpResult = "'IP Address' search box should be cleared and the page should refresh.";
		blnFlag = clearFieldandWait("pgeAssemblyLines", "txtIPAddress_SmallBarCode");
		
		if (blnFlag == true) 
		{
			reporter.ReportStep(strStepDesc, strExpResult, "'IP Address' search box is cleared and the page is refreshed.", "Pass");
		}
		else 
		{
			reporter.ReportStep(strStepDesc, strExpResult, Err.Description, "Fail");
		}
		
		// ########################################################################################################
		// Step 11 - Enter invalid/junk characters in the 'Product Label Device' search box and verify displayed message. 
		// ########################################################################################################
		strStepDesc = "Enter invalid/junk characters in the 'Product Label Device' search box.";
		strExpResult = "Invalid/junk characters should be entered in the 'Product Label Device' search box and '" + strExpectedText + "' message should be displayed.";
		blnFlag = verifySearchResults("pgeAssemblyLines", "Product Label Device", strSearchText, "pgeCommon", "objNoRecordsFound", strExpectedText);
		
		if (blnFlag == true) 
		{
			reporter.ReportStep(strStepDesc, strExpResult, "Invalid/junk characters are entered in the 'Product Label Device' search box and '" + strExpectedText + "' message is displayed successfully.", "Pass");
		}
		else 
		{
			reporter.ReportStep(strStepDesc, strExpResult, Err.Description, "Fail");
		}
		
		// ########################################################################################################
		// Step 12 - Clear the 'Product Label Device' search box and verify page refresh. 
		// ########################################################################################################
		strStepDesc = "Clear the 'Product Label Device' search box and verify page refresh.";
		strExpResult = "'Product Label Device' search box should be cleared and the page should refresh.";
		blnFlag = clearSearchField("pgeAssemblyLines", "Product Label Device");
		
		if (blnFlag == true) 
		{
			reporter.ReportStep(strStepDesc, strExpResult, "'Product Label Device' search box is cleared and the page is refreshed.", "Pass");
		}
		else 
		{
			reporter.ReportStep(strStepDesc, strExpResult, Err.Description, "Fail");
		}
		
		// ########################################################################################################
		// Step 13 - Enter invalid/junk characters in the 'IP Address' search box and verify displayed message. 
		// ########################################################################################################
		strStepDesc = "Enter invalid/junk characters in the 'IP Address' search box.";
		strExpResult = "Invalid/junk characters should be entered in the 'IP Address' search box and '" + strExpectedText + "' message should be displayed.";
		blnFlag = verifySearchResults("pgeAssemblyLines", "txtIPAddress_ProductLabel", strSearchText,"objNoRecordsFound", strExpectedText);
		
		if (blnFlag == true) 
		{
			reporter.ReportStep(strStepDesc, strExpResult, "Invalid/junk characters are entered in the 'IP Address' search box and '" + strExpectedText + "' message is displayed successfully.", "Pass");
		}
		else 
		{
			reporter.ReportStep(strStepDesc, strExpResult, Err.Description, "Fail");
		}
		
		// ########################################################################################################
		// Step 14 - Clear the 'IP Address' search box and verify page refresh. 
		// ########################################################################################################
		strStepDesc = "Clear the 'IP Address' search box and verify page refresh.";
		strExpResult = "'IP Address' search box should be cleared and the page should refresh.";
		blnFlag =  clearFieldandWait("pgeAssemblyLines", "txtIPAddress_ProductLabel");
		
		if (blnFlag == true) 
		{
			reporter.ReportStep(strStepDesc, strExpResult, "'IP Address' search box is cleared and the page is refreshed.", "Pass");
		}
		else 
		{
			reporter.ReportStep(strStepDesc, strExpResult, Err.Description, "Fail");
		}
		
		// ########################################################################################################
		// Step 15 - Enter invalid/junk characters in the 'Custom Label Device' search box and verify displayed message. 
		// ########################################################################################################
		strStepDesc = "Enter invalid/junk characters in the 'Custom Label Device' search box.";
		strExpResult = "Invalid/junk characters should be entered in the 'Custom Label Device' search box and '" + strExpectedText + "' message should be displayed.";
		blnFlag = verifySearchResults("pgeAssemblyLines", "Custom Label Device", strSearchText, "pgeCommon", "objNoRecordsFound", strExpectedText);
		
		if (blnFlag == true) 
		{
			reporter.ReportStep(strStepDesc, strExpResult, "Invalid/junk characters are entered in the 'Custom Label Device' search box and '" + strExpectedText + "' message is displayed successfully.", "Pass");
		}
		else 
		{
			reporter.ReportStep(strStepDesc, strExpResult, Err.Description, "Fail");
		}
		
		// ########################################################################################################
		// Step 16 - Clear the 'Custom Label Device' search box and verify page refresh. 
		// ########################################################################################################
		strStepDesc = "Clear the 'Custom Label Device' search box and verify page refresh.";
		strExpResult = "'Custom Label Device' search box should be cleared and the page should refresh.";
		blnFlag = clearSearchField("pgeAssemblyLines", "Custom Label Device");
		
		if (blnFlag == true) 
		{
			reporter.ReportStep(strStepDesc, strExpResult, "'Custom Label Device' search box is cleared and the page is refreshed.", "Pass");
		}
		else 
		{
			reporter.ReportStep(strStepDesc, strExpResult, Err.Description, "Fail");
		}
		
		// ########################################################################################################
		// Step 17 - Enter invalid/junk characters in the 'IP Address' search box and verify displayed message. 
		// ########################################################################################################
		strStepDesc = "Enter invalid/junk characters in the 'IP Address' search box.";
		strExpResult = "Invalid/junk characters should be entered in the 'IP Address' search box and '" + strExpectedText + "' message should be displayed.";
		blnFlag = verifySearchResults("pgeAssemblyLines", "txtIPAddress_Custom", strSearchText,"objNoRecordsFound", strExpectedText);
		
		if (blnFlag == true) 
		{
			reporter.ReportStep(strStepDesc, strExpResult, "Invalid/junk characters are entered in the 'IP Address' search box and '" + strExpectedText + "' message is displayed successfully.", "Pass");
		}
		else 
		{
			reporter.ReportStep(strStepDesc, strExpResult, Err.Description, "Fail");
		}
		
		// ########################################################################################################
		// Step 18 - Clear the 'IP Address' search box and verify page refresh. 
		// ########################################################################################################
		strStepDesc = "Clear the 'IP Address' search box and verify page refresh.";
		strExpResult = "'IP Address' search box should be cleared and the page should refresh.";
		blnFlag = clearFieldandWait("pgeAssemblyLines", "txtIPAddress_Custom");
		
		if (blnFlag == true) 
		{
			reporter.ReportStep(strStepDesc, strExpResult, "'IP Address' search box is cleared and the page is refreshed.", "Pass");
		}
		else 
		{
			reporter.ReportStep(strStepDesc, strExpResult, Err.Description, "Fail");
		}
		
		// ########################################################################################################
		// Step 19 - Logout from SBWEB test application.
		// ########################################################################################################
		strStepDesc = "Logout from SBWEB test application.";
		strExpResult = "User should be logged out successfully.";
		blnFlag = logoutMiMedx(strUserName);
		
		if (blnFlag == true)
		{
			reporter.ReportStep(strStepDesc, strExpResult,"User: '" + strUserName+ "' signed out successfully.", "Pass");
		} 
		else 
		{
			reporter.ReportStep(strStepDesc, strExpResult, Err.Description, "Fail");
		}		
		
		