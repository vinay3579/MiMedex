	
		// ########################################################################################################
		// # Test Case ID: SBWEB-575
		// # Test Case Name: VerifyResolveNegativefunctionality
		// #-------------------------------------------------------------------------------------------------------
		// # Description: This script verifies error messages on 'Resolve' page.
		// #-------------------------------------------------------------------------------------------------------
		// # Pre-conditions: User credentials are communicated to the user.
		// # 				 MiMedx SBWeb URL is accessible to the user.
		// # Post-conditions: NA
		// # Limitations: NA
		// #-------------------------------------------------------------------------------------------------------
		// # Owner: Kamlesh Yadav
		// # Created on: 05-06-2015
		// #-------------------------------------------------------------------------------------------------------
		// # Reviewer: 
		// # Review Date:
		// #-------------------------------------------------------------------------------------------------------
		// # History Notes:
		// ########################################################################################################

		//Getting data from config file  
		String strURL=Script.dicConfigValues.get("strApplicationURL");
		
		//Getting data from master test data file
		String strUserName = Script.dicTestData.get("strUserName");
		String strPassword = Script.dicTestData.get("StrPassword");
		String strExpectedText = Script.dicTestData.get("strExpectedText");	
		String strExpectedText1 = Script.dicTestData.get("strExpectedText1");	
		String strExpectedText2 = Script.dicTestData.get("strExpectedText2");
		String strMaxCharTemplate = Script.dicTestData.get("strMaxCharTemplate");
		String strMaxLengthComments = Script.dicTestData.get("strMaxLengthComments");
		String strExceptionComments = Script.dicTestData.get("strExceptionComments");
		
		// ########################################################################################################
		// Step 1 - Launch browser.
		// Open application URL.
		// ########################################################################################################
		strStepDesc = "Launch browser and open SBWEB application URL.";
		strExpResult = "Browser and SBWEB application URL should be opened.";
		blnFlag = LaunchApplicationUrl(strURL);
		
		if (blnFlag == true) 
		{
			reporter.ReportStep(strStepDesc, strExpResult, "SBWEB application url: '"+strURL+"' launched successfully.", "Pass");
		}
		else 
		{
			reporter.ReportStep(strStepDesc, strExpResult, Err.Description, "Fail");
			return;
		}

		// ########################################################################################################
		// Step 2 - Enter all the mandatory fields with
		// valid data and click on login button.
		// ########################################################################################################
		strStepDesc = "Enter all the mandatory fields with valid data and click on login button.";
		strExpResult = "User should be logged in into the application.";
		blnFlag = loginMiMedx(strUserName, strPassword);
		
		if (blnFlag == true) 
		{
			reporter.ReportStep(strStepDesc, strExpResult, "User: '" + strUserName+ "' signed in successfully.", "Pass");
		} 
		else 
		{
			reporter.ReportStep(strStepDesc, strExpResult, Err.Description, "Fail");
			return;
		}

		// ########################################################################################################
		// Step 3 - Click on 'Remote Access' link.
		// ########################################################################################################
		strStepDesc = "Click on 'Remote Access' link given on left navigation area.";
		strExpResult = "'Remote Access' link should be clicked.";
		blnFlag = clickAndVerifyVisible("pgeAssembly_Lines", "lnkRemoteAccess", "pgeAssembly_Lines", "lnkFieldTracking");
		
		if (blnFlag == true) 
		{
			reporter.ReportStep(strStepDesc, strExpResult, "'Remote Access' link clicked successfully.", "Pass");
		} 
		else 
		{
			reporter.ReportStep(strStepDesc, strExpResult, Err.Description, "Fail");
			return;
		}

		// ########################################################################################################
		// Step 4 - Click on 'Field Tracking' link and verify 'Field Tracking' landing page.
		// ########################################################################################################
		strStepDesc = "Click on 'Field Tracking' link and verify 'Field Tracking' landing page is displayed.";
		strExpResult = "'Field Tracking' landing page should be displayed.";
		blnFlag = clickAndVerify("pgeAssembly_Lines","lnkFieldTracking", "Field Tracking");
		
		if (blnFlag == true) 
		{
			reporter.ReportStep(strStepDesc, strExpResult, "'Field Tracking' page is verified successfully.", "Pass");
		}
		else 
		{
			reporter.ReportStep(strStepDesc, strExpResult, Err.Description, "Fail");
			return;
		}
		
		// ########################################################################################################
		// Step 5 - Click on 'Reconcile Field Inventory' tab.
		// ########################################################################################################
		strStepDesc = "Click on 'Reconcile Field Inventory' tab.";
		strExpResult = "Reconcile Field Inventory tab should be displayed.";
		//blnFlag = clickAndVerify("pgeFieldTracking","lnkReconcileFieldInventory","pgeFieldTracking","lnkReconcile");
		blnFlag = clickTab("pgeFieldTracking","lnkReconcileFieldInventory","Reconcile Field Inventory"); 
		
		if (blnFlag == true) 
		{
			reporter.ReportStep(strStepDesc, strExpResult,"Reconcile Field Inventory tab is displayed successfully.", "Pass");
		}
		else 
		{
			reporter.ReportStep(strStepDesc, strExpResult, Err.Description, "Fail");
			return;
		}
		
		// ########################################################################################################
		// Step 6 - Click on Reconcile link for any record.
		// ########################################################################################################
		strStepDesc = "Click on Reconcile link for any record.";
		strExpResult = "'Inventory Reconciliation' page should be displayed.";
		blnFlag= clickAndVerify("pgeFieldTracking","lnkReconcile","Inventory Reconciliation");
		
		if (blnFlag == true) 
		{
			reporter.ReportStep(strStepDesc, strExpResult,"'Inventory Reconciliation' page is displayed successfully.", "Pass");
		}
		else 
		{
			reporter.ReportStep(strStepDesc, strExpResult, Err.Description, "Fail");
		}
		
		// ########################################################################################################
		// Step 7 - Click on 'Missing' yellow button if it exists, click on 'Resolve' link otherwise.
		// ########################################################################################################
		strStepDesc = "Click on 'Missing' yellow button if it exists, click on 'Resolve' link otherwise.";
		strExpResult = "Resolve page should be displayed.";
		blnFlag = clickMissingYellowButtonInventoryReconciliation();
		
		if (blnFlag == true) 
		{
			reporter.ReportStep(strStepDesc, strExpResult,"Resolve page is displayed successfully.", "Pass");
		}
		else 
		{
			reporter.ReportStep(strStepDesc, strExpResult, Err.Description, "Fail");
		}
		
		// ########################################################################################################
		// Step 8 - De-select 'Resolution' and 'Action Taken' drop-downs if selected by default.
		// ########################################################################################################
		strStepDesc = "De-select 'Resolution' and 'Action Taken' drop-downs if selected by default.";
		strExpResult = "Drop-downs 'Resolution' and 'Action Taken' should be de-selected.";
		blnFlag = deselectResolutionActionTakenListsOnFieldTracking();
		
		if (blnFlag == true) 
		{
			reporter.ReportStep(strStepDesc, strExpResult, "Drop-downs 'Resolution' and 'Action Taken' are de-selected successfully.", "Pass");
		}
		else 
		{
			reporter.ReportStep(strStepDesc, strExpResult, Err.Description, "Fail");
		}
		
		// ########################################################################################################
		// Step 9 - Click on Resolved button and verify message displayed.
		// ########################################################################################################
		strStepDesc = "Click on Resolved button and verify message displayed.";
		strExpResult = "Error Message '"+ strExpectedText + "' should be displayed.";
		blnFlag = verifyErrorMessage("pgeFieldTracking","btnResolved","pgeCommon","objUIMessageErrorSummary",strExpectedText);
		
		if (blnFlag == true) 
		{
			reporter.ReportStep(strStepDesc, strExpResult,  "Error Message '"+ strExpectedText + "' is displayed successfully.", "Pass");
		}
		else 
		{
			reporter.ReportStep(strStepDesc, strExpResult, Err.Description, "Fail");
		}
		
		// ########################################################################################################
		// Step 10 - Select a Resolution only and click on Resolved button.
		// ########################################################################################################
		strStepDesc = "Select a Resolution only and click on Resolved button.";
		strExpResult = "Error Message '"+strExpectedText1+"' should be displayed.";
		blnFlag = VerifyDropDownNewSelectionErrorMessages("pgeFieldTracking","lstResolution","btnResolved","objUIMessageErrorSummary",strExpectedText1);
		
		if (blnFlag == true) 
		{
			reporter.ReportStep(strStepDesc,strExpResult,"Error Message '"+strExpectedText1+"' is displayed successfully.", "Pass");
		}
		else 
		{
			reporter.ReportStep(strStepDesc, strExpResult, Err.Description, "Fail");
		}
		
		// ############################################################################################################
		// Step 11 - Clear 'Resolution' drop-down.
		// ############################################################################################################
		strStepDesc = "Clear 'Resolution' drop-down.";
		strExpResult = "'Resolution' drop-down should be cleared-out.";
		blnFlag = Page("pgeFieldTracking").Element("lstResolution").Select("---");
	
		if (blnFlag == true) 
		{
			reporter.ReportStep(strStepDesc, strExpResult,"'Resolution' drop-down is cleared-out successfully.", "Pass");
		}
		else 
		{
			reporter.ReportStep(strStepDesc, strExpResult, Err.Description, "Fail");
		}
		
		// ############################################################################################################
		// Step 12 - Select only Action Taken and click on Resolved button.
		// ############################################################################################################
		strStepDesc = "Select only Action Taken and click on Resolved button.";
		strExpResult = "Error Message '"+strExpectedText2+"' should be displayed.";
		blnFlag = VerifyDropDownNewSelectionErrorMessages("pgeFieldTracking","lstActionTaken","btnResolved","objUIMessageErrorSummary",strExpectedText2);
	
		if (blnFlag == true) 
		{
			reporter.ReportStep(strStepDesc, strExpResult,"Error Message '"+strExpectedText2+"' is displayed successfully.", "Pass");
		}
		else 
		{
			reporter.ReportStep(strStepDesc, strExpResult, Err.Description, "Fail");
		}
		
		// ########################################################################################################
		// Step 13 - Enter more than 500 characters in 'Comments' section and verify message displayed.
		// ########################################################################################################
		strStepDesc = "Enter more than 500 characters in 'Comments' section and verify message displayed.";
		strExpResult = "Error Message '"+ strExceptionComments + "' should be displayed.";
		blnFlag = verifyMaxCharacErrorMessage("pgeFieldTracking","txtResolveComments",strMaxCharTemplate,strMaxLengthComments,"pgeFieldTracking","btnResolved","pgeCommon","objUIMessageErrorSummary",strExceptionComments);
		
		if (blnFlag == true) 
		{
			reporter.ReportStep(strStepDesc, strExpResult,"Error Message '"+ strExceptionComments + "' is displayed successfully.", "Pass");
		}
		else 
		{
			reporter.ReportStep(strStepDesc, strExpResult, Err.Description, "Fail");
		}
		
		// ########################################################################################################
		// Step 14 - Clear 'Action Taken' drop-down and save the changes.
		// ########################################################################################################
		strStepDesc = "Clear 'Action Taken' drop-down and save the changes.";
		strExpResult = "'Action Taken' drop-down should be cleared-out and changes should be saved.";
		blnFlag = selectValueClickButtonAndNavigate("pgeFieldTracking","lstActionTaken","---","btnSave","Resolve");
		
		if (blnFlag == true) 
		{
			reporter.ReportStep(strStepDesc, strExpResult,"'Action Taken' drop-down is cleared-out and changes are saved successfully", "Pass");
		}
		else 
		{
			reporter.ReportStep(strStepDesc, strExpResult, Err.Description, "Fail");
		}
		
		// ########################################################################################################
		// Step 15 - Logout from SBWEB test application.
		// ########################################################################################################
		strStepDesc = "Logout from SBWEB test application.";
		strExpResult = "User should be logged out successfully.";
		blnFlag = logoutMiMedx(strUserName);
		
		if (blnFlag == true)
		{
			reporter.ReportStep(strStepDesc, strExpResult, "User: '" + strUserName+ "' signed out successfully.", "Pass");
		} 
		else 
		{
			reporter.ReportStep(strStepDesc, strExpResult, Err.Description, "Fail");
		}