
		// ########################################################################################################
		// # Test Case ID: SBWEB-576
		// # Test Case Name: VerifyInventoryReconciliationsNegativeFunctionality
		// #-------------------------------------------------------------------------------------------------------
		// # Description: This scripts verifies 'Inventory Reconciliation' negative functionality in 'Remote Access' 
		// # page and then successfully log out.
		// #-------------------------------------------------------------------------------------------------------
		// # Pre-conditions: User credentials are communicated to the user.
		// # 				 MiMedx SBWeb URL is accessible to the user.
		// # Post-conditions: NA
		// # Limitations: NA
		// #-------------------------------------------------------------------------------------------------------
		// # Owner: 
		// # Created on: 10-04-2015
		// #-------------------------------------------------------------------------------------------------------
		// # Reviewer: 
		// # Review Date:
		// #-------------------------------------------------------------------------------------------------------
		// # History Notes:
		// ########################################################################################################

		//Getting data from config file  
		String strURL = Script.dicConfigValues.get("strApplicationURL");
		
		//Getting data from master test data file
		String strUserName = Script.dicTestData.get("strUserName");
		String strPassword = Script.dicTestData.get("StrPassword");
		String strSalesAgentError = Script.dicTestData.get("strSalesAgentError");
		
		// ########################################################################################################
		// Step 1 - Launch browser.
		// Open application URL.
		// ########################################################################################################
		strStepDesc = "Launch browser and open SBWEB application URL.";
		strExpResult = "Browser and SBWEB application URL should be opened.";
		blnFlag = LaunchApplicationUrl(strURL);
		
		if (blnFlag) 
		{
			reporter.ReportStep(strStepDesc, strExpResult, "SBWEB application url: '"+strURL+"' launched successfully.", "Pass");
		}
		else 
		{
			reporter.ReportStep(strStepDesc, strExpResult, Err.Description, "Fail");
			return;
		}

		// ########################################################################################################
		// Step 2 - Enter all the mandatory fields with
		// valid data and click on login button.
		// ########################################################################################################
		strStepDesc = "Enter all the mandatory fields with valid data and click on login button.";
		strExpResult = "User should be logged in into the application.";
		blnFlag = loginMiMedx(strUserName, strPassword);
		
		if (blnFlag == true) 
		{
			reporter.ReportStep(strStepDesc, strExpResult, "User: '" + strUserName+ "' signed in successfully.", "Pass");
		} 
		else 
		{
			reporter.ReportStep(strStepDesc, strExpResult, Err.Description, "Fail");
			return;
		}

		// ########################################################################################################
		// Step 3 - Click on Remote Access link.
		// ########################################################################################################
		strStepDesc = "Click on 'Remote Access' link given on left navigation area.";
		strExpResult = "'Remote Access' link should be clicked.";
		blnFlag = clickAndVerifyVisible("pgeAssembly_Lines", "lnkRemoteAccess", "pgeAssembly_Lines", "lnkFieldTracking");
		
		if (blnFlag == true) 
		{
			reporter.ReportStep(strStepDesc, strExpResult, "'Remote Access' link clicked successfully.", "Pass");
		} 
		else 
		{
			reporter.ReportStep(strStepDesc, strExpResult, Err.Description, "Fail");
		}

		// ########################################################################################################
		// Step 4 - Click on 'Field Tracking' link and verify landing page.
		// ########################################################################################################
		strStepDesc = "Click on 'Field Tracking' link and verify 'Field Tracking' landing page is displayed.";
		strExpResult = "'Field Tracking' landing page should be displayed.";
		blnFlag = clickAndVerify("pgeAssembly_Lines","lnkFieldTracking", "Field Tracking");
		
		if (blnFlag == true) 
		{
			reporter.ReportStep(strStepDesc, strExpResult, "'Field Tracking' link is clicked and 'Field Tracking' landing page is verified successfully.", "Pass");
		}
		else 
		{
			reporter.ReportStep(strStepDesc, strExpResult, Err.Description, "Fail");
		}

		// ########################################################################################################
		// Step 5 - Click on 'Reconcile Field Inventory' tab.
		// ########################################################################################################
		strStepDesc = "Click on 'Reconcile Field Inventory' tab.";
		strExpResult = "'Reconcile Field Inventory' tab should be clicked.";
		blnFlag = clickTab("pgeFieldTracking", "lnkReconcileFieldInventory", "Reconcile Field Inventory");
		waitForSync(5);
		
		if (blnFlag == true) 
		{
			reporter.ReportStep(strStepDesc, strExpResult, "'Reconcile Field Inventory' tab is clicked successfully.", "Pass");
		}
		else 
		{
			reporter.ReportStep(strStepDesc, strExpResult, Err.Description, "Fail");
		}
		
		// ########################################################################################################
		// Step 6 - Click 'Reconcile' link for any record and verify 'Inventory Reconciliation' page is displayed
		// ########################################################################################################
		strStepDesc = "Click 'Reconcile' link for any record and verify 'Inventory Reconciliation' page is displayed";
		strExpResult = "'Inventory Reconciliation' page should be displayed";
		blnFlag = clickAndVerify("pgeFieldTracking","lnkReconcile", "Inventory Reconciliation");
		
		if (blnFlag == true) 
		{
			reporter.ReportStep(strStepDesc, strExpResult, "'Reconcile' link is clicked and 'Inventory Reconciliation' page is verified successfully.", "Pass");
		}
		else 
		{
			reporter.ReportStep(strStepDesc, strExpResult, Err.Description, "Fail");
		}
		
		// ########################################################################################################
		// Step 7 - Click 'Consignment Billing' button and verify error message is displayed.
		// ########################################################################################################
		strStepDesc = "Click 'Consignment Billing' button and verify error message '" + strSalesAgentError + "' is displayed.";
		strExpResult = "'Consignment Billing' button should be clicked and error message '" + strSalesAgentError + "' should be displayed.";
		blnFlag = clickAndVerify("pgeFieldTracking","btnNewConsignmentBilling", "pgeCommon", "objUIMessageErrorSummary");
		
		if (blnFlag == true) 
		{
			reporter.ReportStep(strStepDesc, strExpResult, "'Consignment Billing' button is clicked and error message '" + strSalesAgentError + "' is displayed successfully.", "Pass");
		}
		else 
		{
			reporter.ReportStep(strStepDesc, strExpResult, Err.Description, "Fail");
		}
		
		// ########################################################################################################
		// Step 8 - Logout from SBWEB test application.
		// ########################################################################################################
		strStepDesc = "Logout from SBWEB test application.";
		strExpResult = "User should be logged out successfully.";
		blnFlag = logoutMiMedx(strUserName);
		
		if (blnFlag == true)
		{
			reporter.ReportStep(strStepDesc, strExpResult, "User: '" + strUserName+ "' signed out successfully.", "Pass");
		} 
		else 
		{
			reporter.ReportStep(strStepDesc, strExpResult, Err.Description, "Fail");
		}
	